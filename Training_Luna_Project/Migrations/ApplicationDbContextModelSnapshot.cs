// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Training_Luna_Project.Data;

#nullable disable

namespace Training_Luna_Project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FormField", b =>
                {
                    b.Property<int>("FormModelsId")
                        .HasColumnType("int");

                    b.Property<int>("FieldsId")
                        .HasColumnType("int");

                    b.HasKey("FormModelsId", "FieldsId");

                    b.HasIndex("FieldsId");

                    b.ToTable("FormField");
                });

            modelBuilder.Entity("Training_Luna_Project.Data.Models.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataType = "STRING",
                            Name = "Ad",
                            Required = true
                        },
                        new
                        {
                            Id = 2,
                            DataType = "STRING",
                            Name = "Soyad",
                            Required = true
                        },
                        new
                        {
                            Id = 3,
                            DataType = "NUMBER",
                            Name = "Yaş",
                            Required = false
                        });
                });

            modelBuilder.Entity("Training_Luna_Project.Data.Models.FormField", b =>
                {
                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<int>("FieldsId")
                        .HasColumnType("int");

                    b.Property<int>("FormModelId")
                        .HasColumnType("int");

                    b.Property<int>("FormModelsId")
                        .HasColumnType("int");

                    b.HasIndex("FieldId");

                    b.HasIndex("FormModelId");

                    b.ToTable("FormFields");
                });

            modelBuilder.Entity("Training_Luna_Project.Data.Models.FormModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FormModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 7, 15, 15, 34, 15, 465, DateTimeKind.Local).AddTicks(3218),
                            Description = "First Form Description",
                            Name = "FormName theFirst",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Training_Luna_Project.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "1234",
                            Role = "Admin",
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Password = "1234",
                            Role = "User",
                            UserName = "User"
                        });
                });

            modelBuilder.Entity("FormField", b =>
                {
                    b.HasOne("Training_Luna_Project.Data.Models.Field", null)
                        .WithMany()
                        .HasForeignKey("FieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Training_Luna_Project.Data.Models.FormModel", null)
                        .WithMany()
                        .HasForeignKey("FormModelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Training_Luna_Project.Data.Models.FormField", b =>
                {
                    b.HasOne("Training_Luna_Project.Data.Models.Field", "Field")
                        .WithMany()
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Training_Luna_Project.Data.Models.FormModel", "FormModel")
                        .WithMany()
                        .HasForeignKey("FormModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("FormModel");
                });

            modelBuilder.Entity("Training_Luna_Project.Data.Models.FormModel", b =>
                {
                    b.HasOne("Training_Luna_Project.Data.Models.User", "User")
                        .WithMany("FormModels")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Training_Luna_Project.Data.Models.User", b =>
                {
                    b.Navigation("FormModels");
                });
#pragma warning restore 612, 618
        }
    }
}
